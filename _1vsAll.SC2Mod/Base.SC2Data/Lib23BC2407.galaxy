include "TriggerLibs/NativeLib"

include "Lib23BC2407_h"

//--------------------------------------------------------------------------------------------------
// Library: Library
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib23BC2407_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib23BC2407_InitVariables_completed = false;

void lib23BC2407_InitVariables () {
    if (lib23BC2407_InitVariables_completed) {
        return;
    }

    lib23BC2407_InitVariables_completed = true;

    lib23BC2407_gv_oAAmaxNumberOfStartLocation = 8;
}

// Functions
bool lib23BC2407_gf_OAAisStartMod () {
    // Automatic Variable Declarations
    // Implementation
    if (((PlayerGroupCount(PlayerGroupActive()) >= 3) && (PlayerGroupCount(PlayerGroupActive()) <= 5))) {
        return true;
    }
    else {
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaDebug, StringExternal("Param/Value/lib_23BC2407_98CE3D69"));
        return false;
    }
}

int lib23BC2407_gf_OAAGetSinglePlayer () {
    // Variable Declarations
    int lv__countTeam;
    int lv__countPlayer;
    int lv__singlePlayer;

    // Automatic Variable Declarations
    const int autoC3A677D7_ae = 2;
    const int autoC3A677D7_ai = 1;
    playergroup auto70745A8D_g;
    int auto70745A8D_var;

    // Variable Initialization

    // Implementation
    lv__countTeam = 1;
    for ( ; ( (autoC3A677D7_ai >= 0 && lv__countTeam <= autoC3A677D7_ae) || (autoC3A677D7_ai < 0 && lv__countTeam >= autoC3A677D7_ae) ) ; lv__countTeam += autoC3A677D7_ai ) {
        lv__countPlayer = 0;
        auto70745A8D_g = GameAttributePlayersForTeam(lv__countTeam);
        auto70745A8D_var = -1;
        while (true) {
            auto70745A8D_var = PlayerGroupNextPlayer(auto70745A8D_g, auto70745A8D_var);
            if (auto70745A8D_var < 0) { break; }
            lv__countPlayer += 1;
            lv__singlePlayer = auto70745A8D_var;
        }
        if ((lv__countPlayer == 1)) {
            break;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_23BC2407_03F2BDD7", "playerNumber", IntToText(lv__singlePlayer));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_03F2BDD7", "playerName", PlayerName(lv__singlePlayer));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_03F2BDD7", "teamNumber", IntToText(lv__countTeam));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_23BC2407_03F2BDD7"));
    return lv__singlePlayer;
}

playergroup lib23BC2407_gf_OAAGetGroupOfEnemies () {
    // Variable Declarations
    int lv__countTeam;
    int lv__countPlayer;
    playergroup lv__groupOfPlayer;

    // Automatic Variable Declarations
    const int autoCF880AC4_ae = 2;
    const int autoCF880AC4_ai = 1;

    // Variable Initialization
    lv__groupOfPlayer = PlayerGroupEmpty();

    // Implementation
    lv__countTeam = 1;
    for ( ; ( (autoCF880AC4_ai >= 0 && lv__countTeam <= autoCF880AC4_ae) || (autoCF880AC4_ai < 0 && lv__countTeam >= autoCF880AC4_ae) ) ; lv__countTeam += autoCF880AC4_ai ) {
        lv__countPlayer = 0;
        lv__groupOfPlayer = PlayerGroupEmpty();
        if ((PlayerGroupCount(GameAttributePlayersForTeam(lv__countTeam)) >= 2)) {
            libNtve_gf_AddPlayerGroupToPlayerGroup(GameAttributePlayersForTeam(lv__countTeam), lv__groupOfPlayer);
            break;
        }

    }
    TextExpressionSetToken("Param/Expression/lib_23BC2407_909EBB32", "numberOfPlayers", IntToText(PlayerGroupCount(lv__groupOfPlayer)));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_909EBB32", "teamNumber", IntToText(lv__countTeam));
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_23BC2407_909EBB32"));
    return lv__groupOfPlayer;
}

void lib23BC2407_gf_OAASearchAndRecordStartLocations (int lp_numberOfEnemies) {
    // Variable Declarations
    int lv__countStartLocation;
    int lv__numberOfStartLocation;

    // Automatic Variable Declarations
    const int auto9E24311B_ae = 8;
    const int auto9E24311B_ai = 1;
    int auto9978F6E8_val;
    playergroup autoC41CCE78_g;
    int autoC41CCE78_var;
    point autoF8C3B621_val;
    point auto7A359CF3_val;
    const int auto0E7E8CCC_ae = 8;
    const int auto0E7E8CCC_ai = 1;

    // Variable Initialization

    // Implementation
    lv__countStartLocation = 1;
    for ( ; ( (auto9E24311B_ai >= 0 && lv__countStartLocation <= auto9E24311B_ae) || (auto9E24311B_ai < 0 && lv__countStartLocation >= auto9E24311B_ae) ) ; lv__countStartLocation += auto9E24311B_ai ) {
        auto9978F6E8_val = lv__countStartLocation;
        if (auto9978F6E8_val == 1) {
            if (((PointGetX(PointFromName("Start Location 001")) != 0.0) || (PointGetY(PointFromName("Start Location 001")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 001");
            }

            if (((PointGetX(PointFromName(("시작 장소 001"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 001"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 001"));
            }

        }
        else if (auto9978F6E8_val == 2) {
            if (((PointGetX(PointFromName("Start Location 002")) != 0.0) || (PointGetY(PointFromName("Start Location 002")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 002");
            }

            if (((PointGetX(PointFromName(("시작 장소 002"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 002"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 002"));
            }

        }
        else if (auto9978F6E8_val == 3) {
            if (((PointGetX(PointFromName("Start Location 003")) != 0.0) || (PointGetY(PointFromName("Start Location 003")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 003");
            }

            if (((PointGetX(PointFromName(("시작 장소 003"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 003"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 003"));
            }

        }
        else if (auto9978F6E8_val == 4) {
            if (((PointGetX(PointFromName("Start Location 004")) != 0.0) || (PointGetY(PointFromName("Start Location 004")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 004");
            }

            if (((PointGetX(PointFromName(("시작 장소 004"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 004"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 004"));
            }

        }
        else if (auto9978F6E8_val == 5) {
            if (((PointGetX(PointFromName("Start Location 005")) != 0.0) || (PointGetY(PointFromName("Start Location 005")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 005");
            }

            if (((PointGetX(PointFromName(("시작 장소 005"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 005"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 005"));
            }

        }
        else if (auto9978F6E8_val == 6) {
            if (((PointGetX(PointFromName("Start Location 006")) != 0.0) || (PointGetY(PointFromName("Start Location 006")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 006");
            }

            if (((PointGetX(PointFromName(("시작 장소 006"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 006"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 006"));
            }

        }
        else if (auto9978F6E8_val == 7) {
            if (((PointGetX(PointFromName("Start Location 007")) != 0.0) || (PointGetY(PointFromName("Start Location 007")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 007");
            }

            if (((PointGetX(PointFromName(("시작 장소 007"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 007"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 007"));
            }

        }
        else if (auto9978F6E8_val == 8) {
            if (((PointGetX(PointFromName("Start Location 008")) != 0.0) || (PointGetY(PointFromName("Start Location 008")) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName("Start Location 008");
            }

            if (((PointGetX(PointFromName(("시작 장소 008"))) != 0.0) || (PointGetY(PointFromName(("시작 장소 008"))) != 0.0))) {
                lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] = PointFromName(("시작 장소 008"));
            }

        }
        else {
        }
    }
    autoC41CCE78_g = PlayerGroupActive();
    autoC41CCE78_var = -1;
    while (true) {
        autoC41CCE78_var = PlayerGroupNextPlayer(autoC41CCE78_g, autoC41CCE78_var);
        if (autoC41CCE78_var < 0) { break; }
        autoF8C3B621_val = PlayerStartLocation(autoC41CCE78_var);
        if (autoF8C3B621_val == PointFromName("Start Location 001")) {
            lv__numberOfStartLocation = 1;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 002")) {
            lv__numberOfStartLocation = 2;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 003")) {
            lv__numberOfStartLocation = 3;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 004")) {
            lv__numberOfStartLocation = 4;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 005")) {
            lv__numberOfStartLocation = 5;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 006")) {
            lv__numberOfStartLocation = 6;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 007")) {
            lv__numberOfStartLocation = 7;
        }
        else if (autoF8C3B621_val == PointFromName("Start Location 008")) {
            lv__numberOfStartLocation = 8;
        }
        else {
        }
        auto7A359CF3_val = PlayerStartLocation(autoC41CCE78_var);
        if (auto7A359CF3_val == PointFromName(("시작 장소 001"))) {
            lv__numberOfStartLocation = 1;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 002"))) {
            lv__numberOfStartLocation = 2;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 003"))) {
            lv__numberOfStartLocation = 3;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 004"))) {
            lv__numberOfStartLocation = 4;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 005"))) {
            lv__numberOfStartLocation = 5;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 006"))) {
            lv__numberOfStartLocation = 6;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 007"))) {
            lv__numberOfStartLocation = 7;
        }
        else if (auto7A359CF3_val == PointFromName(("시작 장소 008"))) {
            lv__numberOfStartLocation = 8;
        }
        else {
        }
        lib23BC2407_gv_oAAplayerAtStartingLocation[lv__numberOfStartLocation] = autoC41CCE78_var;
        lib23BC2407_gv_oAAbusyStartingLocation[lv__numberOfStartLocation] = true;
    }
    lv__countStartLocation = 1;
    for ( ; ( (auto0E7E8CCC_ai >= 0 && lv__countStartLocation <= auto0E7E8CCC_ae) || (auto0E7E8CCC_ai < 0 && lv__countStartLocation >= auto0E7E8CCC_ae) ) ; lv__countStartLocation += auto0E7E8CCC_ai ) {
        if (((PointGetX(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation]) == 0.0) && (PointGetY(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation]) == 0.0))) {
            lib23BC2407_gv_oAAmaxNumberOfStartLocation -= 1;
        }

    }
}

text lib23BC2407_gf_OAAGiveUnitsToSinglePlayer (int lp_singlePlayer, int lp_numberOfEnemies) {
    // Variable Declarations
    string lv__building;
    string lv__worker;
    abilcmd lv__abilityCommandGather;
    abilcmd lv__abilityCommandRallyPoint;
    int lv__count;
    int lv__countStartLocation;
    fixed lv__minimumDistance;
    int lv__numberOfStartLocation;
    const fixed lv__radiusCreate = 5.0;
    const int lv__numberOfWorkers = 12;
    const fixed lv__radiusGetWorkers = 8.0;
    const int lv__supplay = 200;
    const int lv__minerals = 50;
    text lv__description;

    // Automatic Variable Declarations
    string autoDD56678E_val;
    int autoA9173186_n;
    int autoA9173186_i;
    int auto441F9446_ae;
    const int auto441F9446_ai = 1;
    unitgroup autoDD6CEEA9_g;
    int autoDD6CEEA9_u;
    unit autoDD6CEEA9_var;
    unitgroup autoAABF33DD_g;
    int autoAABF33DD_u;
    unit autoAABF33DD_var;

    // Variable Initialization
    lv__count = (lp_numberOfEnemies - 1);
    lv__minimumDistance = 999.0;

    // Implementation
    autoDD56678E_val = PlayerRace(lp_singlePlayer);
    if (autoDD56678E_val == "Prot") {
        lv__building = "Nexus";
        lv__worker = "Probe";
        lv__abilityCommandGather = AbilityCommand("ProbeHarvest", 0);
        lv__abilityCommandRallyPoint = AbilityCommand("RallyNexus", 0);
    }
    else if (autoDD56678E_val == "Terr") {
        lv__building = "CommandCenter";
        lv__worker = "SCV";
        lv__abilityCommandGather = AbilityCommand("SCVHarvest", 0);
        lv__abilityCommandRallyPoint = AbilityCommand("RallyCommand", 0);
    }
    else if (autoDD56678E_val == "Zerg") {
        lv__building = "Hatchery";
        lv__worker = "Drone";
        lv__abilityCommandGather = AbilityCommand("DroneHarvest", 0);
        lv__abilityCommandRallyPoint = AbilityCommand("RallyHatchery", 1);
    }
    else {
    }
    if ((PlayerRace(lp_singlePlayer) == "Zerg")) {
        CreepSetSpeed(c_creepSpeedGrowth, 1000.0);
    }

    autoA9173186_n = lv__count;
    for (autoA9173186_i = 1; autoA9173186_i <= autoA9173186_n; autoA9173186_i += 1) {
        lv__minimumDistance = 999.0;
        auto441F9446_ae = lib23BC2407_gv_oAAmaxNumberOfStartLocation;
        lv__countStartLocation = 1;
        for ( ; ( (auto441F9446_ai >= 0 && lv__countStartLocation <= auto441F9446_ae) || (auto441F9446_ai < 0 && lv__countStartLocation >= auto441F9446_ae) ) ; lv__countStartLocation += auto441F9446_ai ) {
            if (((lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation] != PlayerStartLocation(lp_singlePlayer)) && (lib23BC2407_gv_oAAbusyStartingLocation[lv__countStartLocation] == false) && (DistanceBetweenPoints(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation], PlayerStartLocation(lp_singlePlayer)) < lv__minimumDistance) && (PointGetX(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation]) != 0.0) && (PointGetY(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation]) != 0.0))) {
                lv__minimumDistance = DistanceBetweenPoints(lib23BC2407_gv_oAApointAtStartingLocation[lv__countStartLocation], PlayerStartLocation(lp_singlePlayer));
                lv__numberOfStartLocation = lv__countStartLocation;
            }

        }
        lib23BC2407_gv_oAAbusyStartingLocation[lv__numberOfStartLocation] = true;
        UnitCreate(1, lv__building, 0, lp_singlePlayer, lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], 270.0);
        autoDD6CEEA9_g = UnitGroup(lv__building, lp_singlePlayer, RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusGetWorkers), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoDD6CEEA9_u = UnitGroupCount(autoDD6CEEA9_g, c_unitCountAll);
        for (;; autoDD6CEEA9_u -= 1) {
            autoDD6CEEA9_var = UnitGroupUnitFromEnd(autoDD6CEEA9_g, autoDD6CEEA9_u);
            if (autoDD6CEEA9_var == null) { break; }
            UnitIssueOrder(autoDD6CEEA9_var, OrderTargetingUnit(lv__abilityCommandRallyPoint, UnitGroupClosestToPoint(UnitGroup(lib23BC2407_gf_OAAGetResourceType(lp_singlePlayer, lv__radiusGetWorkers), c_playerAny, RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusGetWorkers), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(autoDD6CEEA9_var))), c_orderQueueReplace);
        }
        if ((PlayerRace(lp_singlePlayer) == "Zerg")) {
            libNtve_gf_CreateUnitsAtPoint2(1, "Overlord", 0, lp_singlePlayer, RegionRandomPoint(RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusCreate)));
        }

        libNtve_gf_CreateUnitsAtPoint2(lv__numberOfWorkers, lv__worker, 0, lp_singlePlayer, RegionRandomPoint(RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusCreate)));
        autoAABF33DD_g = UnitGroup(lv__worker, lp_singlePlayer, RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusGetWorkers), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
        autoAABF33DD_u = UnitGroupCount(autoAABF33DD_g, c_unitCountAll);
        for (;; autoAABF33DD_u -= 1) {
            autoAABF33DD_var = UnitGroupUnitFromEnd(autoAABF33DD_g, autoAABF33DD_u);
            if (autoAABF33DD_var == null) { break; }
            UnitIssueOrder(autoAABF33DD_var, OrderTargetingUnit(lv__abilityCommandGather, UnitGroupClosestToPoint(UnitGroup(lib23BC2407_gf_OAAGetResourceType(lp_singlePlayer, lv__radiusGetWorkers), c_playerAny, RegionCircle(lib23BC2407_gv_oAApointAtStartingLocation[lv__numberOfStartLocation], lv__radiusGetWorkers), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), UnitGetPosition(autoAABF33DD_var))), c_orderQueueReplace);
        }
    }
    PlayerModifyPropertyInt(lp_singlePlayer, c_playerPropSuppliesLimit, c_playerPropOperSetTo, (lv__supplay * lp_numberOfEnemies));
    Wait(0.1, c_timeGame);
    PlayerModifyPropertyInt(lp_singlePlayer, c_playerPropMinerals, c_playerPropOperAdd, (lv__minerals * (lp_numberOfEnemies - 1)));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "numberPlayer", IntToText(lp_singlePlayer));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "namePlayer", PlayerName(lp_singlePlayer));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "buildingNumber", IntToText(lv__count));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "buildingName", UnitTypeGetName(lv__building));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "workerNumber", IntToText((lv__count * lv__numberOfWorkers)));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_3898A727", "workerName", UnitTypeGetName(lv__worker));
    lv__description = (StringToText("") + TextExpressionAssemble("Param/Expression/lib_23BC2407_3898A727"));
    if ((PlayerRace(lp_singlePlayer) == "Zerg")) {
        TextExpressionSetToken("Param/Expression/lib_23BC2407_91F90052", "number", IntToText(lv__count));
        lv__description = (lv__description + TextExpressionAssemble("Param/Expression/lib_23BC2407_91F90052"));
    }

    TextExpressionSetToken("Param/Expression/lib_23BC2407_EE37E462", "maxSupplies", IntToText((lv__count * lv__supplay)));
    TextExpressionSetToken("Param/Expression/lib_23BC2407_EE37E462", "minerals", IntToText((lv__count * lv__minerals)));
    lv__description = (lv__description + TextExpressionAssemble("Param/Expression/lib_23BC2407_EE37E462"));
    return lv__description;
}

string lib23BC2407_gf_OAAGetResourceType (int lp_player, fixed lp_radius) {
    // Variable Declarations
    unitgroup lv__resources;

    // Automatic Variable Declarations
    unitgroup auto043E3A30_g;
    int auto043E3A30_u;
    unit auto043E3A30_var;

    // Variable Initialization
    lv__resources = UnitGroupEmpty();

    // Implementation
    auto043E3A30_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0);
    auto043E3A30_u = UnitGroupCount(auto043E3A30_g, c_unitCountAll);
    for (;; auto043E3A30_u -= 1) {
        auto043E3A30_var = UnitGroupUnitFromEnd(auto043E3A30_g, auto043E3A30_u);
        if (auto043E3A30_var == null) { break; }
        if (((RegionContainsPoint(RegionCircle(PlayerStartLocation(lp_player), lp_radius), UnitGetPosition(auto043E3A30_var)) == true) && ((UnitGetType(auto043E3A30_var) == "MineralField") || (UnitGetType(auto043E3A30_var) == "MineralField750") || (UnitGetType(auto043E3A30_var) == "MineralField450") || (UnitGetType(auto043E3A30_var) == "MineralFieldOpaque") || (UnitGetType(auto043E3A30_var) == "MineralFieldOpaque900") || (UnitGetType(auto043E3A30_var) == "BattleStationMineralField") || (UnitGetType(auto043E3A30_var) == "BattleStationMineralField750") || (UnitGetType(auto043E3A30_var) == "LabMineralField") || (UnitGetType(auto043E3A30_var) == "LabMineralField750") || (UnitGetType(auto043E3A30_var) == "PurifierMineralField") || (UnitGetType(auto043E3A30_var) == "PurifierMineralField750") || (UnitGetType(auto043E3A30_var) == "PurifierRichMineralField") || (UnitGetType(auto043E3A30_var) == "PurifierRichMineralField750") || (UnitGetType(auto043E3A30_var) == "RichMineralField") || (UnitGetType(auto043E3A30_var) == "RichMineralField750")))) {
            UnitGroupAdd(lv__resources, auto043E3A30_var);
        }

    }
    return UnitGetType(UnitGroupRandomUnit(lv__resources, c_unitCountAll));
}

void lib23BC2407_gf_OAAInfo (int lp_singlePlayer, playergroup lp_groupOfEnemies, int lp_numberOfEnemies, text lp_descriptionAboutSinglePlayer) {
    // Variable Declarations
    text[18] lv__description;
    int lv__countActivePlayer;
    int lv__countEnemyPlayer;

    // Automatic Variable Declarations
    playergroup autoBC30A8CC_g;
    playergroup autoB71687DD_g;
    int autoB71687DD_var;
    playergroup auto8AC2727B_g;

    // Variable Initialization

    // Implementation
    autoBC30A8CC_g = PlayerGroupActive();
    lv__countActivePlayer = -1;
    while (true) {
        lv__countActivePlayer = PlayerGroupNextPlayer(autoBC30A8CC_g, lv__countActivePlayer);
        if (lv__countActivePlayer < 0) { break; }
        TextExpressionSetToken("Param/Expression/lib_23BC2407_59D81314", "numberOfEnemiesPlayer", IntToText(lp_numberOfEnemies));
        lv__description[lv__countActivePlayer] = (StringToText("") + TextExpressionAssemble("Param/Expression/lib_23BC2407_59D81314"));
        if ((lv__countActivePlayer == lp_singlePlayer)) {
            TextExpressionSetToken("Param/Expression/lib_23BC2407_85099B62", "numberPlayer", IntToText(lp_singlePlayer));
            TextExpressionSetToken("Param/Expression/lib_23BC2407_85099B62", "namePlayer", PlayerName(lp_singlePlayer));
            TextExpressionSetToken("Param/Expression/lib_23BC2407_85099B62", "numberOfEnemyPlayers", IntToText(lp_numberOfEnemies));
            lv__description[lv__countActivePlayer] = (lv__description[lv__countActivePlayer] + TextExpressionAssemble("Param/Expression/lib_23BC2407_85099B62"));
            autoB71687DD_g = lp_groupOfEnemies;
            autoB71687DD_var = -1;
            while (true) {
                autoB71687DD_var = PlayerGroupNextPlayer(autoB71687DD_g, autoB71687DD_var);
                if (autoB71687DD_var < 0) { break; }
                TextExpressionSetToken("Param/Expression/lib_23BC2407_24EB5C11", "numberPlayer", IntToText(lp_singlePlayer));
                TextExpressionSetToken("Param/Expression/lib_23BC2407_24EB5C11", "namePlayer", PlayerName(autoB71687DD_var));
                lv__description[lv__countActivePlayer] = (lv__description[lv__countActivePlayer] + TextExpressionAssemble("Param/Expression/lib_23BC2407_24EB5C11"));
            }
        }
        else {
            auto8AC2727B_g = lp_groupOfEnemies;
            lv__countEnemyPlayer = -1;
            while (true) {
                lv__countEnemyPlayer = PlayerGroupNextPlayer(auto8AC2727B_g, lv__countEnemyPlayer);
                if (lv__countEnemyPlayer < 0) { break; }
                if ((lv__countActivePlayer == lv__countEnemyPlayer)) {
                    TextExpressionSetToken("Param/Expression/lib_23BC2407_A575F345", "numberEnemyPlayer", IntToText(lp_singlePlayer));
                    TextExpressionSetToken("Param/Expression/lib_23BC2407_A575F345", "nameEnemyPlayer", PlayerName(lp_singlePlayer));
                    TextExpressionSetToken("Param/Expression/lib_23BC2407_A575F345", "numberSinglePlayer", IntToText(lp_numberOfEnemies));
                    TextExpressionSetToken("Param/Expression/lib_23BC2407_A575F345", "nameSinglePlayer", PlayerName(lp_singlePlayer));
                    lv__description[lv__countActivePlayer] = (lv__description[lv__countActivePlayer] + TextExpressionAssemble("Param/Expression/lib_23BC2407_A575F345"));
                }

            }
        }
        lv__description[lv__countActivePlayer] = (lv__description[lv__countActivePlayer] + TextExpressionAssemble("Param/Expression/lib_23BC2407_DF106505"));
        lv__description[lv__countActivePlayer] = (lv__description[lv__countActivePlayer] + lp_descriptionAboutSinglePlayer);
        HelpPanelAddTip(PlayerGroupSingle(lv__countActivePlayer), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_23BC2407_EDCD90A3"), libNtve_ge_TipType_NormalTip), lv__description[lv__countActivePlayer], StringExternal("Param/Value/lib_23BC2407_E606CDE6"), "Assets\\Textures\\ui_glues_icons_largebutton_popout_highlight.dds");
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: OAA | getGameSpeed
//--------------------------------------------------------------------------------------------------
bool lib23BC2407_gt_OAAgetGameSpeed_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetGlobalTimeScale(1.4);
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib23BC2407_gt_OAAgetGameSpeed_Init () {
    lib23BC2407_gt_OAAgetGameSpeed = TriggerCreate("lib23BC2407_gt_OAAgetGameSpeed_Func");
    TriggerAddEventChatMessage(lib23BC2407_gt_OAAgetGameSpeed, 1, "-gamespeed140", true);
    TriggerAddEventChatMessage(lib23BC2407_gt_OAAgetGameSpeed, 1, "-gs140", true);
}

//--------------------------------------------------------------------------------------------------
// Trigger: OAA | Launch
//--------------------------------------------------------------------------------------------------
bool lib23BC2407_gt_OAALaunch_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv__singlePlayer;
    playergroup lv__groupOfEnemies;
    int lv__numberOfEnemies;
    text lv__descriptionAboutSinglePlayer;

    // Automatic Variable Declarations
    // Variable Initialization
    lv__singlePlayer = 1;
    lv__groupOfEnemies = PlayerGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    if ((lib23BC2407_gf_OAAisStartMod() == true)) {
        lv__singlePlayer = lib23BC2407_gf_OAAGetSinglePlayer();
        lv__groupOfEnemies = lib23BC2407_gf_OAAGetGroupOfEnemies();
        lv__numberOfEnemies = PlayerGroupCount(lv__groupOfEnemies);
        lib23BC2407_gf_OAASearchAndRecordStartLocations(lv__numberOfEnemies);
        lv__descriptionAboutSinglePlayer = lib23BC2407_gf_OAAGiveUnitsToSinglePlayer(lv__singlePlayer, lv__numberOfEnemies);
        lib23BC2407_gf_OAAInfo(lv__singlePlayer, lv__groupOfEnemies, lv__numberOfEnemies, lv__descriptionAboutSinglePlayer);
        Wait(10.0, c_timeReal);
        if ((PlayerRace(lv__singlePlayer) == "Zerg")) {
            CreepSetSpeed(c_creepSpeedGrowth, 100.0);
        }

    }
    else {
        TextExpressionSetToken("Param/Expression/lib_23BC2407_E399EB49", "allPlayers", IntToText(PlayerGroupCount(PlayerGroupActive())));
        TextExpressionSetToken("Param/Expression/lib_23BC2407_E399EB49", "allEnemies", IntToText(lv__numberOfEnemies));
        TextExpressionSetToken("Param/Expression/lib_23BC2407_E399EB49", "singlePlayer", PlayerName(lv__singlePlayer));
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaChat, TextExpressionAssemble("Param/Expression/lib_23BC2407_E399EB49"));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib23BC2407_gt_OAALaunch_Init () {
    lib23BC2407_gt_OAALaunch = TriggerCreate("lib23BC2407_gt_OAALaunch_Func");
    TriggerAddEventMapInit(lib23BC2407_gt_OAALaunch);
}

void lib23BC2407_InitTriggers () {
    lib23BC2407_gt_OAAgetGameSpeed_Init();
    lib23BC2407_gt_OAALaunch_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib23BC2407_InitLib_completed = false;

void lib23BC2407_InitLib () {
    if (lib23BC2407_InitLib_completed) {
        return;
    }

    lib23BC2407_InitLib_completed = true;

    lib23BC2407_InitLibraries();
    lib23BC2407_InitVariables();
    lib23BC2407_InitTriggers();
}

