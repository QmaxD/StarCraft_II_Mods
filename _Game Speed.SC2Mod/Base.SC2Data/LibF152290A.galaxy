include "TriggerLibs/NativeLib"

include "LibF152290A_h"

//--------------------------------------------------------------------------------------------------
// Library: Game Speed | GS
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libF152290A_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libF152290A_InitVariables_completed = false;

void libF152290A_InitVariables () {
    if (libF152290A_InitVariables_completed) {
        return;
    }

    libF152290A_InitVariables_completed = true;

    libF152290A_gv_gSorigGlobalSpeed = GameGetGlobalTimeScale();
    libF152290A_gv_gSnewGlobalSpeed = 1000;
    libF152290A_gv_gStimerTickTock = TimerCreate();
    libF152290A_gv_gSwindowDialog = c_invalidDialogId;
    libF152290A_gv_gSwindowDialogItemPanel = c_invalidDialogControlId;
    libF152290A_gv_gSwindowDialogItemLabel = c_invalidDialogControlId;
    libF152290A_gv_gSwindowDialogItemImage = c_invalidDialogControlId;
    libF152290A_gv_gStimerForFormat = TimerCreate();
    libF152290A_gv_gStimeFormat = StringToText("<min2/>:<sec2/>");
}

// Functions
void libF152290A_gf_GSgetAttribut () {
    // Automatic Variable Declarations
    string auto7221B3A8_val;

    // Implementation
    auto7221B3A8_val = GameAttributeGameValue("1");
    if (auto7221B3A8_val == "0001") {
        libF152290A_gv_gSnewGlobalSpeed = 500;
    }
    else if (auto7221B3A8_val == "0002") {
        libF152290A_gv_gSnewGlobalSpeed = 750;
    }
    else if (auto7221B3A8_val == "0018") {
        libF152290A_gv_gSnewGlobalSpeed = 800;
    }
    else if (auto7221B3A8_val == "0019") {
        libF152290A_gv_gSnewGlobalSpeed = 850;
    }
    else if (auto7221B3A8_val == "0020") {
        libF152290A_gv_gSnewGlobalSpeed = 900;
    }
    else if (auto7221B3A8_val == "0021") {
        libF152290A_gv_gSnewGlobalSpeed = 950;
    }
    else if (auto7221B3A8_val == "0014") {
        libF152290A_gv_gSnewGlobalSpeed = 1050;
    }
    else if (auto7221B3A8_val == "0015") {
        libF152290A_gv_gSnewGlobalSpeed = 1100;
    }
    else if (auto7221B3A8_val == "0016") {
        libF152290A_gv_gSnewGlobalSpeed = 1150;
    }
    else if (auto7221B3A8_val == "0017") {
        libF152290A_gv_gSnewGlobalSpeed = 1200;
    }
    else if (auto7221B3A8_val == "0004") {
        libF152290A_gv_gSnewGlobalSpeed = 1250;
    }
    else if (auto7221B3A8_val == "0022") {
        libF152290A_gv_gSnewGlobalSpeed = 1300;
    }
    else if (auto7221B3A8_val == "0023") {
        libF152290A_gv_gSnewGlobalSpeed = 1350;
    }
    else if (auto7221B3A8_val == "0024") {
        libF152290A_gv_gSnewGlobalSpeed = 1400;
    }
    else if (auto7221B3A8_val == "0025") {
        libF152290A_gv_gSnewGlobalSpeed = 1450;
    }
    else if (auto7221B3A8_val == "0005") {
        libF152290A_gv_gSnewGlobalSpeed = 1500;
    }
    else if (auto7221B3A8_val == "0006") {
        libF152290A_gv_gSnewGlobalSpeed = 1750;
    }
    else if (auto7221B3A8_val == "0007") {
        libF152290A_gv_gSnewGlobalSpeed = 2000;
    }
    else if (auto7221B3A8_val == "0008") {
        libF152290A_gv_gSnewGlobalSpeed = 2250;
    }
    else if (auto7221B3A8_val == "0009") {
        libF152290A_gv_gSnewGlobalSpeed = 2500;
    }
    else if (auto7221B3A8_val == "0010") {
        libF152290A_gv_gSnewGlobalSpeed = 2750;
    }
    else if (auto7221B3A8_val == "0011") {
        libF152290A_gv_gSnewGlobalSpeed = 3000;
    }
    else if (auto7221B3A8_val == "0012") {
        libF152290A_gv_gSnewGlobalSpeed = 4000;
    }
    else if (auto7221B3A8_val == "0013") {
        libF152290A_gv_gSnewGlobalSpeed = 5000;
    }
    else {
        libF152290A_gv_gSnewGlobalSpeed = 1000;
    }
}

void libF152290A_gf_GSchangeSmoothly (int lp_speed) {
    // Variable Declarations
    int lv__speed;
    int lv__count;
    int lv__shift;
    fixed lv__wait;

    // Automatic Variable Declarations
    // Variable Initialization
    lv__speed = lp_speed;
    lv__count = 1000;
    lv__shift = 25;
    lv__wait = 0.5;

    // Implementation
    if ((lv__speed < 1000)) {
        if ((lv__speed > 750)) {
            lv__wait = 1.0;
        }

        while ((lv__count > lv__speed)) {
            lv__count -= lv__shift;
            GameSetGlobalTimeScale((lv__count / 1000.0));
            Wait(lv__wait, c_timeReal);
        }
    }
    else {
        if ((lv__speed < 2500)) {
            lv__wait = 0.75;
            if ((lv__speed < 1500)) {
                lv__wait = 1.0;
            }

        }

        while ((lv__count < lv__speed)) {
            lv__count += lv__shift;
            GameSetGlobalTimeScale((lv__count / 1000.0));
            Wait(lv__wait, c_timeReal);
        }
    }
    if (((lv__count / 1000.0) == GameGetGlobalTimeScale())) {
    }
    else {
        GameSetGlobalTimeScale((libF152290A_gv_gSnewGlobalSpeed / 1000.0));
    }
    GameSetSpeedLocked(true);
}

trigger auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_Trigger = null;

void libF152290A_gf_GSchangeAndDisplayInformationToTimer () {
    if (auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_Trigger == null) {
        auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_Trigger = TriggerCreate("auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_TriggerFunc");
    }

    TriggerExecute(auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_Trigger, false, false);
}

bool auto_libF152290A_gf_GSchangeAndDisplayInformationToTimer_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Implementation
    libF152290A_gv_gSdialogValue += 1.0;
    libNtve_gf_SetDialogItemText(libF152290A_gv_gSwindowDialogItemLabel, TextTimeFormat(libF152290A_gv_gStimeFormat, FixedToInt(libF152290A_gv_gSdialogValue)), PlayerGroupAll());
    return true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: GS | pl1
//--------------------------------------------------------------------------------------------------
bool libF152290A_gt_GSpl1_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    PlayerModifyPropertyInt(EventPlayer(), c_playerPropMinerals, c_playerPropOperSetTo, 250000);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropVespene, c_playerPropOperSetTo, 100000);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropSuppliesLimit, c_playerPropOperSetTo, 400);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropSuppliesMade, c_playerPropOperSetTo, 400);
    PlayerSetState(EventPlayer(), c_playerStateAbortEnabled, true);
    PlayerSetState(EventPlayer(), c_playerStateContinueEnabled, true);
    PlayerSetState(EventPlayer(), c_playerStateGivesBounty, true);
    PlayerSetState(EventPlayer(), c_playerStateRestartEnabled, true);
    PlayerSetState(EventPlayer(), c_playerStateFidgetingEnabled, true);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageDealtPercent, c_playerPropOperSetTo, 200);
    PlayerModifyPropertyInt(EventPlayer(), c_playerPropDamageTakenPercent, c_playerPropOperSetTo, 50);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF152290A_gt_GSpl1_Init () {
    libF152290A_gt_GSpl1 = TriggerCreate("libF152290A_gt_GSpl1_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: GS | launch
//--------------------------------------------------------------------------------------------------
bool libF152290A_gt_GSlaunch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    GameSetSpeedLocked(false);
    libF152290A_gf_GSgetAttribut();
    if (((GameAttributeGameValue("3") == "0001") || (GameAttributeGameValue("3") == "0003"))) {
        if ((GameAttributeGameValue("3") == "0001")) {
            UISetFrameVisible(PlayerGroupActive(), c_syncFrameTypeMissionTimePanel, false);
        }

        TimerStart(libF152290A_gv_gStimerTickTock, (libF152290A_gv_gSms / libF152290A_gv_gSnewGlobalSpeed), true, c_timeReal);
        TimerStart(libF152290A_gv_gStimerForFormat, ((libF152290A_gv_gSms / libF152290A_gv_gSnewGlobalSpeed) * 2700.0), false, c_timeReal);
    }

    libF152290A_gv_gSspeedForText = (libF152290A_gv_gSnewGlobalSpeed / 10);
    if ((libF152290A_gv_gSspeedForText == 100)) {
        TextExpressionSetToken("Param/Expression/lib_F152290A_A5EA31B9", "speedForText", IntToText(libF152290A_gv_gSspeedForText));
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_F152290A_6F7731D8"), libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_F152290A_A5EA31B9"), StringExternal("Param/Value/lib_F152290A_EAB07ACD"), "Assets\\Textures\\btn-ability-stetmann-stetelliteoverloadspeed.dds");
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_F152290A_1F7FA483") + (IntToText(libF152290A_gv_gSspeedForText) + StringExternal("Param/Value/lib_F152290A_3E20D934"))));
    }
    else if ((libF152290A_gv_gSspeedForText < 100)) {
        TextExpressionSetToken("Param/Expression/lib_F152290A_8D91B30B", "speedForText", IntToText(libF152290A_gv_gSspeedForText));
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_F152290A_4EC2F205"), libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_F152290A_8D91B30B"), StringExternal("Param/Value/lib_F152290A_324A2BE3"), "Assets\\Textures\\btn-ability-stetmann-stetelliteoverloadspeed.dds");
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_F152290A_D789EB69") + (IntToText(libF152290A_gv_gSspeedForText) + StringExternal("Param/Value/lib_F152290A_760A7C71"))));
    }
    else if ((libF152290A_gv_gSspeedForText > 100)) {
        TextExpressionSetToken("Param/Expression/lib_F152290A_BB546C79", "speedForText", IntToText(libF152290A_gv_gSspeedForText));
        HelpPanelAddTip(PlayerGroupAll(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_F152290A_A5939359"), libNtve_ge_TipType_NormalTip), TextExpressionAssemble("Param/Expression/lib_F152290A_BB546C79"), StringExternal("Param/Value/lib_F152290A_0F579D1D"), "Assets\\Textures\\btn-ability-stetmann-stetelliteoverloadspeed.dds");
        UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, (StringExternal("Param/Value/lib_F152290A_AC8949B6") + (IntToText(libF152290A_gv_gSspeedForText) + StringExternal("Param/Value/lib_F152290A_5B53DFEF"))));
    }
    if ((libF152290A_gv_gSnewGlobalSpeed == 1000)) {
    }
    else {
        if ((GameAttributeGameValue("2") == "0001")) {
            libF152290A_gf_GSchangeSmoothly(libF152290A_gv_gSnewGlobalSpeed);
        }
        else {
            GameSetGlobalTimeScale((libF152290A_gv_gSnewGlobalSpeed / 1000.0));
            GameSetSpeedLocked(true);
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF152290A_gt_GSlaunch_Init () {
    libF152290A_gt_GSlaunch = TriggerCreate("libF152290A_gt_GSlaunch_Func");
    TriggerAddEventMapInit(libF152290A_gt_GSlaunch);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GS | createTimerDialog
//--------------------------------------------------------------------------------------------------
bool libF152290A_gt_UntitledTrigger001_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv__dialogWidth;
    int lv__dialogHeight;

    // Automatic Variable Declarations
    // Variable Initialization
    lv__dialogWidth = 200;
    lv__dialogHeight = 44;

    // Conditions
    if (testConds) {
        if (!((GameAttributeGameValue("3") != "0002"))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameAttributeGameValue("3") == "0003")) {
        DialogCreate(lv__dialogWidth, lv__dialogHeight, c_anchorBottomLeft, 280, 340, true);
    }
    else {
        DialogCreate(lv__dialogWidth, lv__dialogHeight, c_anchorBottomLeft, 280, 302, true);
    }
    libF152290A_gv_gSwindowDialog = DialogLastCreated();
    DialogSetImageVisible(libF152290A_gv_gSwindowDialog, false);
    DialogControlCreate(libF152290A_gv_gSwindowDialog, c_triggerControlTypePanel);
    libF152290A_gv_gSwindowDialogItemPanel = DialogControlLastCreated();
    DialogControlSetSize(libF152290A_gv_gSwindowDialogItemPanel, PlayerGroupAll(), lv__dialogWidth, lv__dialogHeight);
    DialogControlSetPosition(libF152290A_gv_gSwindowDialogItemPanel, PlayerGroupAll(), c_anchorTopLeft, 10, 0);
    DialogControlCreateInPanelFromTemplate(libF152290A_gv_gSwindowDialogItemPanel, c_triggerControlTypeLabel, "MissionTimePanel/MissionTimePanelTemplate/TimeLabel");
    libF152290A_gv_gSwindowDialogItemLabel = DialogControlLastCreated();
    DialogControlCreateInPanelFromTemplate(libF152290A_gv_gSwindowDialogItemPanel, c_triggerControlTypeImage, "MissionTimePanel/MissionTimePanelTemplate/BackgroundImage");
    libF152290A_gv_gSwindowDialogItemImage = DialogControlLastCreated();
    DialogSetVisible(libF152290A_gv_gSwindowDialog, PlayerGroupAll(), true);
    DialogControlSetVisible(libF152290A_gv_gSwindowDialogItemPanel, PlayerGroupAll(), true);
    DialogControlSetVisible(libF152290A_gv_gSwindowDialogItemLabel, PlayerGroupAll(), true);
    DialogControlSetVisible(libF152290A_gv_gSwindowDialogItemImage, PlayerGroupAll(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF152290A_gt_UntitledTrigger001_Init () {
    libF152290A_gt_UntitledTrigger001 = TriggerCreate("libF152290A_gt_UntitledTrigger001_Func");
    TriggerAddEventMapInit(libF152290A_gt_UntitledTrigger001);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GS | countOnTimerTickTock
//--------------------------------------------------------------------------------------------------
bool libF152290A_gt_UntitledTrigger002_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libF152290A_gf_GSchangeAndDisplayInformationToTimer();
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF152290A_gt_UntitledTrigger002_Init () {
    libF152290A_gt_UntitledTrigger002 = TriggerCreate("libF152290A_gt_UntitledTrigger002_Func");
    TriggerAddEventTimer(libF152290A_gt_UntitledTrigger002, libF152290A_gv_gStimerTickTock);
}

//--------------------------------------------------------------------------------------------------
// Trigger: GS | changeTimerFormat
//--------------------------------------------------------------------------------------------------
bool libF152290A_gt_GSchangeTimerFormat_Func (bool testConds, bool runActions) {
    // Variable Declarations
    text lv__timeFormat;

    // Automatic Variable Declarations
    // Variable Initialization
    lv__timeFormat = StringExternal("Param/Value/lib_F152290A_FB6B4F97");

    // Actions
    if (!runActions) {
        return true;
    }

    libF152290A_gv_gStimeFormat = lv__timeFormat;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libF152290A_gt_GSchangeTimerFormat_Init () {
    libF152290A_gt_GSchangeTimerFormat = TriggerCreate("libF152290A_gt_GSchangeTimerFormat_Func");
    TriggerAddEventTimer(libF152290A_gt_GSchangeTimerFormat, libF152290A_gv_gStimerForFormat);
}

void libF152290A_InitTriggers () {
    libF152290A_gt_GSpl1_Init();
    libF152290A_gt_GSlaunch_Init();
    libF152290A_gt_UntitledTrigger001_Init();
    libF152290A_gt_UntitledTrigger002_Init();
    libF152290A_gt_GSchangeTimerFormat_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libF152290A_InitLib_completed = false;

void libF152290A_InitLib () {
    if (libF152290A_InitLib_completed) {
        return;
    }

    libF152290A_InitLib_completed = true;

    libF152290A_InitLibraries();
    libF152290A_InitVariables();
    libF152290A_InitTriggers();
}

