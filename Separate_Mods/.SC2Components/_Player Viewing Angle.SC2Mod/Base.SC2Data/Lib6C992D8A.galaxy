include "TriggerLibs/NativeLib"

include "Lib6C992D8A_h"

//--------------------------------------------------------------------------------------------------
// Library: Library
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib6C992D8A_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool lib6C992D8A_InitVariables_completed = false;

void lib6C992D8A_InitVariables () {
    if (lib6C992D8A_InitVariables_completed) {
        return;
    }

    lib6C992D8A_InitVariables_completed = true;

}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: VA | Launch
//--------------------------------------------------------------------------------------------------
bool lib6C992D8A_gt_VALaunch_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto51238775_g;
    int auto51238775_var;
    playergroup autoEBBFD197_g;
    int autoEBBFD197_var;

    // Actions
    if (!runActions) {
        return true;
    }

    if ((GameAttributeGameValue("1") == "0002")) {
        lib6C992D8A_gv_vARotation_Angle = 1;
        lib6C992D8A_gv_vATurnLeft = 45.0;
        lib6C992D8A_gv_vADuration = 15;
        lib6C992D8A_gv_vADecelerate = 5;
        auto51238775_g = PlayerGroupAll();
        auto51238775_var = -1;
        while (true) {
            auto51238775_var = PlayerGroupNextPlayer(auto51238775_g, auto51238775_var);
            if (auto51238775_var < 0) { break; }
            CameraSetValue(auto51238775_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnLeft, lib6C992D8A_gv_vADuration, -1, lib6C992D8A_gv_vADecelerate);
        }
    }
    else {
        if ((GameAttributeGameValue("1") == "0003")) {
            lib6C992D8A_gv_vARotation_Angle = 2;
            lib6C992D8A_gv_vATurnRight = 135.0;
            lib6C992D8A_gv_vADuration = 15;
            lib6C992D8A_gv_vADecelerate = 5;
            autoEBBFD197_g = PlayerGroupAll();
            autoEBBFD197_var = -1;
            while (true) {
                autoEBBFD197_var = PlayerGroupNextPlayer(autoEBBFD197_g, autoEBBFD197_var);
                if (autoEBBFD197_var < 0) { break; }
                CameraSetValue(autoEBBFD197_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnRight, lib6C992D8A_gv_vADuration, -1, lib6C992D8A_gv_vADecelerate);
            }
        }
        else {
            if ((GameAttributeGameValue("1") == "0004")) {
                lib6C992D8A_gv_vARotation_Angle = 3;
                lib6C992D8A_gv_vATurnLeft = 90.0;
                lib6C992D8A_gv_vATurnRight = 180.0;
                lib6C992D8A_gv_vADuration = 60;
                lib6C992D8A_gv_vADecelerate = 15;
                TriggerExecute(lib6C992D8A_gt_VAChangeAngle, true, false);
            }
            else {
                if ((GameAttributeGameValue("1") == "0005")) {
                    lib6C992D8A_gv_vARotation_Angle = 4;
                    lib6C992D8A_gv_vATurnLeft = 0.1;
                    lib6C992D8A_gv_vATurnRight = 359.9;
                    lib6C992D8A_gv_vADuration = 150;
                    lib6C992D8A_gv_vADecelerate = 0;
                    TriggerExecute(lib6C992D8A_gt_VAChangeAngle, true, false);
                }

            }
        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6C992D8A_gt_VALaunch_Init () {
    lib6C992D8A_gt_VALaunch = TriggerCreate("lib6C992D8A_gt_VALaunch_Func");
    TriggerAddEventMapInit(lib6C992D8A_gt_VALaunch);
}

//--------------------------------------------------------------------------------------------------
// Trigger: VA | Change Angle
//--------------------------------------------------------------------------------------------------
bool lib6C992D8A_gt_VAChangeAngle_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto35603C30_g;
    int auto35603C30_var;

    // Conditions
    if (testConds) {
        if (!(((lib6C992D8A_gv_vARotation_Angle == 3) || (lib6C992D8A_gv_vARotation_Angle == 4)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (true) {
        auto35603C30_g = PlayerGroupAll();
        auto35603C30_var = -1;
        while (true) {
            auto35603C30_var = PlayerGroupNextPlayer(auto35603C30_g, auto35603C30_var);
            if (auto35603C30_var < 0) { break; }
            if ((PlayerStatus(auto35603C30_var) == c_playerStatusActive)) {
                if ((lib6C992D8A_gv_vARotation_Angle == 3)) {
                    CameraSetValue(auto35603C30_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnLeft, lib6C992D8A_gv_vADuration, lib6C992D8A_gv_vADecelerate, lib6C992D8A_gv_vADecelerate);
                    Wait(30.0, c_timeReal);
                    CameraSetValue(auto35603C30_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnRight, lib6C992D8A_gv_vADuration, lib6C992D8A_gv_vADecelerate, lib6C992D8A_gv_vADecelerate);
                    Wait(30.0, c_timeReal);
                }
                else {
                    CameraSetValue(auto35603C30_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnLeft, lib6C992D8A_gv_vADuration, lib6C992D8A_gv_vADecelerate, lib6C992D8A_gv_vADecelerate);
                    CameraSetValue(auto35603C30_var, c_cameraValueYaw, lib6C992D8A_gv_vATurnRight, lib6C992D8A_gv_vADuration, lib6C992D8A_gv_vADecelerate, lib6C992D8A_gv_vADecelerate);
                    Wait(10.0, c_timeReal);
                }
            }

        }
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib6C992D8A_gt_VAChangeAngle_Init () {
    lib6C992D8A_gt_VAChangeAngle = TriggerCreate("lib6C992D8A_gt_VAChangeAngle_Func");
}

void lib6C992D8A_InitTriggers () {
    lib6C992D8A_gt_VALaunch_Init();
    lib6C992D8A_gt_VAChangeAngle_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib6C992D8A_InitLib_completed = false;

void lib6C992D8A_InitLib () {
    if (lib6C992D8A_InitLib_completed) {
        return;
    }

    lib6C992D8A_InitLib_completed = true;

    lib6C992D8A_InitLibraries();
    lib6C992D8A_InitVariables();
    lib6C992D8A_InitTriggers();
}

