include "TriggerLibs/NativeLib"

include "LibCB611753_h"

//--------------------------------------------------------------------------------------------------
// Library: Library
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libCB611753_InitLibraries () {
    libNtve_InitVariables();
}

// Functions
void libCB611753_gf_EnableAirGroundWeaponForPlayer (int lp_player) {
    // Variable Declarations
    string lv__weaponTargetFilters;

    // Automatic Variable Declarations
    // Variable Initialization
    lv__weaponTargetFilters = "Visible;Missile,Stasis,Dead,Hidden,Invulnerable";

    // Implementation
    CatalogFieldValueSet(c_gameCatalogWeapon, "ParticleBeam", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "PsiBlades", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "Adept", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "WarpBlades", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "HighTemplarWeapon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "PhaseDisruptors", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "ThermalLances", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "IonCannons", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "Oracle", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "RepulsorCannon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "Spines", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "Claws", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "AcidSaliva", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "RoachMelee", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "RavagerWeapon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "VolatileBurst", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "VolatileBurstDummy", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "VolatileBurstBuilding", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LurkerMP", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "ParasiteSpore", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "BroodlingStrike", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "BroodlingEscort", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "NeedleClaws", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LocustMPMelee", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "KaiserBlades", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "ImpalerTentacle", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "AcidSpew", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "FusionCutter", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "PunisherGrenades", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "P38ScytheGuassPistol", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "90mmCannons", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "CrucioShockCannon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "InfernalFlameThrower", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "HellionTank", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LiberatorMissileLaunchers", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LiberatorAGWeapon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "BacklashRockets", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LanzerTorpedoes", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "TwinGatlingCannon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "TwinIbiksCannon", "TargetFilters", lp_player, lv__weaponTargetFilters);
    CatalogFieldValueSet(c_gameCatalogWeapon, "LongboltMissile", "TargetFilters", lp_player, lv__weaponTargetFilters);
}

bool libCB611753_gf_UCAEUCanThisUnitAttack (unit lp_triggering_Unit) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitGetType(lp_triggering_Unit) == "Probe") || (UnitGetType(lp_triggering_Unit) == "Zealot") || (UnitGetType(lp_triggering_Unit) == "Adept") || (UnitGetType(lp_triggering_Unit) == "Sentry") || (UnitGetType(lp_triggering_Unit) == "Stalker") || (UnitGetType(lp_triggering_Unit) == "DarkTemplar") || (UnitGetType(lp_triggering_Unit) == "HighTemplar") || (UnitGetType(lp_triggering_Unit) == "Archon") || (UnitGetType(lp_triggering_Unit) == "Immortal") || (UnitGetType(lp_triggering_Unit) == "Colossus") || (UnitGetType(lp_triggering_Unit) == "Disruptor") || (UnitGetType(lp_triggering_Unit) == "Phoenix") || (UnitGetType(lp_triggering_Unit) == "VoidRay") || (UnitGetType(lp_triggering_Unit) == "Oracle") || (UnitGetType(lp_triggering_Unit) == "OracleStasisTrap") || (UnitGetType(lp_triggering_Unit) == "Carrier") || (UnitGetType(lp_triggering_Unit) == "Interceptor") || (UnitGetType(lp_triggering_Unit) == "Tempest") || (UnitGetType(lp_triggering_Unit) == "Mothership") || (UnitGetType(lp_triggering_Unit) == "PhotonCannon") || (UnitGetType(lp_triggering_Unit) == "SCV") || (UnitGetType(lp_triggering_Unit) == "MULE") || (UnitGetType(lp_triggering_Unit) == "Marine") || (UnitGetType(lp_triggering_Unit) == "Reaper") || (UnitGetType(lp_triggering_Unit) == "Marauder") || (UnitGetType(lp_triggering_Unit) == "Ghost") || (UnitGetType(lp_triggering_Unit) == "GhostAlternate") || (UnitGetType(lp_triggering_Unit) == "GhostNova") || (UnitGetType(lp_triggering_Unit) == "Hellion") || (UnitGetType(lp_triggering_Unit) == "HellionTank") || (UnitGetType(lp_triggering_Unit) == "WidowMine") || (UnitGetType(lp_triggering_Unit) == "SiegeTank") || (UnitGetType(lp_triggering_Unit) == "Cyclone") || (UnitGetType(lp_triggering_Unit) == "ThorAP") || (UnitGetType(lp_triggering_Unit) == "VikingFighter") || (UnitGetType(lp_triggering_Unit) == "Medivac") || (UnitGetType(lp_triggering_Unit) == "Liberator") || (UnitGetType(lp_triggering_Unit) == "Raven") || (UnitGetType(lp_triggering_Unit) == "AutoTurret") || (UnitGetType(lp_triggering_Unit) == "Battlecruiser") || (UnitGetType(lp_triggering_Unit) == "Banshee") || (UnitGetType(lp_triggering_Unit) == "PlanetaryFortress") || (UnitGetType(lp_triggering_Unit) == "Bunker") || (UnitGetType(lp_triggering_Unit) == "MissileTurret") || (UnitGetType(lp_triggering_Unit) == "Drone") || (UnitGetType(lp_triggering_Unit) == "Zergling") || (UnitGetType(lp_triggering_Unit) == "BanelingCocoon") || (UnitGetType(lp_triggering_Unit) == "Baneling") || (UnitGetType(lp_triggering_Unit) == "BanelingBurrowed") || (UnitGetType(lp_triggering_Unit) == "Roach") || (UnitGetType(lp_triggering_Unit) == "RavagerCocoon") || (UnitGetType(lp_triggering_Unit) == "Ravager") || (UnitGetType(lp_triggering_Unit) == "Hydralisk") || (UnitGetType(lp_triggering_Unit) == "LurkerMPEgg") || (UnitGetType(lp_triggering_Unit) == "LurkerMP") || (UnitGetType(lp_triggering_Unit) == "LurkerMPBurrowed") || (UnitGetType(lp_triggering_Unit) == "Viper") || (UnitGetType(lp_triggering_Unit) == "Mutalisk") || (UnitGetType(lp_triggering_Unit) == "Corruptor") || (UnitGetType(lp_triggering_Unit) == "SwarmHostMP") || (UnitGetType(lp_triggering_Unit) == "SwarmHostBurrowedMP") || (UnitGetType(lp_triggering_Unit) == "LocustMP") || (UnitGetType(lp_triggering_Unit) == "LocustMPFlying") || (UnitGetType(lp_triggering_Unit) == "Infestor") || (UnitGetType(lp_triggering_Unit) == "InfestorBurrowed") || (UnitGetType(lp_triggering_Unit) == "Ultralisk") || (UnitGetType(lp_triggering_Unit) == "BroodLordCocoon") || (UnitGetType(lp_triggering_Unit) == "BroodLord") || (UnitGetType(lp_triggering_Unit) == "Broodling") || (UnitGetType(lp_triggering_Unit) == "Overlord") || (UnitGetType(lp_triggering_Unit) == "TransportOverlordCocoon") || (UnitGetType(lp_triggering_Unit) == "OverlordTransport") || (UnitGetType(lp_triggering_Unit) == "OverlordCocoon") || (UnitGetType(lp_triggering_Unit) == "Overseer") || (UnitGetType(lp_triggering_Unit) == "Queen") || (UnitGetType(lp_triggering_Unit) == "SpineCrawler") || (UnitGetType(lp_triggering_Unit) == "SporeCrawler"))) {
        return true;
    }
    else {
        return false;
    }
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Initialisation
//--------------------------------------------------------------------------------------------------
bool libCB611753_gt_Initialisation_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto62D5E8D0_g;
    int auto62D5E8D0_var;

    // Actions
    if (!runActions) {
        return true;
    }

    auto62D5E8D0_g = PlayerGroupActive();
    auto62D5E8D0_var = -1;
    while (true) {
        auto62D5E8D0_var = PlayerGroupNextPlayer(auto62D5E8D0_g, auto62D5E8D0_var);
        if (auto62D5E8D0_var < 0) { break; }
        libCB611753_gf_EnableAirGroundWeaponForPlayer(auto62D5E8D0_var);
    }
    UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_CB611753_6954E776"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libCB611753_gt_Initialisation_Init () {
    libCB611753_gt_Initialisation = TriggerCreate("libCB611753_gt_Initialisation_Func");
    TriggerAddEventMapInit(libCB611753_gt_Initialisation);
}

void libCB611753_InitTriggers () {
    libCB611753_gt_Initialisation_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libCB611753_InitLib_completed = false;

void libCB611753_InitLib () {
    if (libCB611753_InitLib_completed) {
        return;
    }

    libCB611753_InitLib_completed = true;

    libCB611753_InitLibraries();
    libCB611753_InitTriggers();
}

